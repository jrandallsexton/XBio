//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XBio.Data {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Queries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Queries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XBio.Data.Queries", typeof(Queries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	A.[Address1],
        ///	A.Address2,
        ///	NULL AS [City],
        ///	NULL AS [State],
        ///	PO.[Value] AS [Postal]
        ///FROM [Address] A
        ///INNER JOIN [Postal] PO ON PO.[Id] = A.[PostalId]
        ///INNER JOIN [Person] P ON P.[AddressId] = A.[Id]
        ///WHERE P.[Id] = @PersonId.
        /// </summary>
        internal static string AddressDtoGetByPersonId {
            get {
                return ResourceManager.GetString("AddressDtoGetByPersonId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT P.[LastName], P.[FirstName], P.[MiddleName], P.[Display]
        ///FROM [Person] P
        ///WHERE P.[Id] = @PersonId.
        /// </summary>
        internal static string PersonDtoGet {
            get {
                return ResourceManager.GetString("PersonDtoGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT PD.[Title], PD.[Value], PD.[Order]
        ///FROM dbo.[PositionDetail] PD
        ///INNER JOIN dbo.[Position] P ON P.[Id] = PD.[PositionId]
        ///WHERE P.[Id] = @PositionId.
        /// </summary>
        internal static string PositionDetailDtosGetByPositionId {
            get {
                return ResourceManager.GetString("PositionDetailDtosGetByPositionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (SELECT * FROM [dbo].[PositionDetail] WHERE [Id] = @Id)
        ///	BEGIN
        ///		UPDATE dbo.[PositionDetail]
        ///		SET
        ///			[PositionId] = @PositionId,
        ///			[Title] = @Title,
        ///			[Value] = @Value,
        ///			[Order] = @Order,
        ///			[Modified] = GetDate()
        ///		WHERE [Id] = @Id
        ///		SELECT @Id
        ///	END
        ///ELSE
        ///	BEGIN
        ///		INSERT INTO dbo.[PositionDetail] (
        ///			[PositionId],
        ///			[Title],
        ///			[Value],
        ///			[Order])
        ///		VALUES (
        ///			@PositionId,
        ///			@Title,
        ///			@Value,
        ///			@Order)
        ///		SELECT SCOPE_IDENTITY()
        ///	END.
        /// </summary>
        internal static string PositionDetailSave {
            get {
                return ResourceManager.GetString("PositionDetailSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	P.Id,
        ///	C.[Name] AS [Company],
        ///	T.[Value] AS [Title],
        ///	0 AS [Telecommute],
        ///	P.StartDate,
        ///	P.EndDate,
        ///	NULL AS [City],
        ///	NULL AS [State]
        ///FROM [Position] P
        ///INNER JOIN [Title] T ON T.[Id] = P.[TitleId]
        ///INNER JOIN [Company] C ON C.[Id] = P.[CompanyId]
        ///WHERE P.[PersonId] = @PersonId
        ///ORDER BY P.[StartDate] DESC.
        /// </summary>
        internal static string PositionDtosGetByPersonId {
            get {
                return ResourceManager.GetString("PositionDtosGetByPersonId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM dbo.[Position] P WHERE P.[Id] = @PositionId
        ///
        ///SELECT PD.* FROM dbo.[PositionDetail] PD
        ///INNER JOIN dbo.[Position] P ON P.[Id] = PD.[PositionId]
        ///WHERE P.[Id] = @PositionId.
        /// </summary>
        internal static string PositionGet {
            get {
                return ResourceManager.GetString("PositionGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (SELECT * FROM [dbo].[Position] WHERE [Id] = @Id)
        ///	BEGIN
        ///		UPDATE dbo.[Position]
        ///		SET
        ///			[CompanyId] = @CompanyId,
        ///			[TitleId] = @TitleId,
        ///			[StartDate] = @StartDate,
        ///			[EndDate] = @EndDate,
        ///			[Modified] = GetDate()
        ///		WHERE [Id] = @Id
        ///		SELECT @Id
        ///	END
        ///ELSE
        ///	BEGIN
        ///		INSERT INTO dbo.[Position] (
        ///			[PersonId],
        ///			[CompanyId],
        ///			[TitleId],
        ///			[StartDate],
        ///			[EndDate])
        ///		VALUES (
        ///			@PersonId,
        ///			@CompanyId,
        ///			@TitleId,
        ///			@StartDate,
        ///			@EndDate)
        ///		SELECT SCOPE_IDEN [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PositionSave {
            get {
                return ResourceManager.GetString("PositionSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (SELECT * FROM [dbo].[Position] WHERE [Id] = @Id)
        ///	BEGIN
        ///		UPDATE dbo.[Position]
        ///		SET
        ///			[CompanyId] = @CompanyId,
        ///			[TitleId] = @TitleId,
        ///			[StartDate] = @StartDate,
        ///			[Modified] = GetDate()
        ///		WHERE [Id] = @Id
        ///		SELECT @Id
        ///	END
        ///ELSE
        ///	BEGIN
        ///		INSERT INTO dbo.[Position] (
        ///			[PersonId],
        ///			[CompanyId],
        ///			[TitleId],
        ///			[StartDate])
        ///		VALUES (
        ///			@PersonId,
        ///			@CompanyId,
        ///			@TitleId,
        ///			@StartDate)
        ///		SELECT SCOPE_IDENTITY()
        ///	END.
        /// </summary>
        internal static string PositionSaveCurrent {
            get {
                return ResourceManager.GetString("PositionSaveCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	P.Id,
        ///	T.[Value] + &apos; - &apos; + C.[Name] AS [Value]
        ///FROM [Position] P
        ///INNER JOIN [Title] T ON T.[Id] = P.[TitleId]
        ///INNER JOIN [Company] C ON C.[Id] = P.[CompanyId]
        ///WHERE P.[PersonId] = @PersonId
        ///ORDER BY [Value] DESC.
        /// </summary>
        internal static string PositionsLookupByPersonId {
            get {
                return ResourceManager.GetString("PositionsLookupByPersonId", resourceCulture);
            }
        }
    }
}
